// Store reference to lists, paragraph and button



// create empty string in which to store result
let result = "";
let interval: any = ""

// function to generate random character string


const stream = new ReadableStream({
  start(controller) {
    interval = setInterval(() => {
      readStream()

      // show it on the screen

    }, 1000);


  },
  pull(controller) {
    // We don't really need a pull in this example
  },
  cancel() {
    // This is called if the reader cancels,
    // so we should stop generating strings
    clearInterval(interval);
  }
});

function readStream() {
  const reader: any = request.body?.getReader();


  // read() returns a promise that resolves
  // when a value has been received
  reader.read().then(function processText({ done, value }: any) {
    // Result objects contain two properties:
    // done  - true if the stream has already given you all its data.
    // value - some data. Always undefined when done is true.
    if (done) {
      console.log("Stream complete");
      reader.releaseLock()
      return;
    }

    const chunk = value
    console.log(chunk.toString('utf-8').slice(0, 25))

    result += chunk;

    // Read some more, and call this function again
    return reader.read().then(processText);
  });
}